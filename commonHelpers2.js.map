{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst delay = document.querySelector('input[name=\"delay\"]');\nlet promiceDelay = delay.value;\n\ndelay.addEventListener('change', () => {\n  promiceDelay = delay.value;\n  //console.log(promiceDelay);\n});\n\n// ToDo: можна і без stateInputs. До інпутів можна добратись і через\n// stateForm.\n// Певно, через деякий час, я буду сам над собою сміятись. :)\nconst stateInputs = document.querySelectorAll('input[name=\"state\"]');\nconst stateForm = document.querySelector('.form');\n//console.log(stateForm);\n\nconst handleClick = event => {\n  event.preventDefault();\n  //console.log(stateForm);\n  let promiceState = '';\n  stateInputs.forEach(input => {\n    if (input.checked) {\n      promiceState = input.value;\n    }\n  });\n  //console.log(promiceState, promiceDelay);\n  if (promiceState && promiceDelay) {\n    // console.log(`${promiceState} in delay: ${promiceDelay}`);\n\n    // Create promise\n    const promise = new Promise((resolve, reject) => {\n      //console.log('new Promice');\n      let msg = '';\n      setTimeout(() => {\n        if (promiceState === 'fulfilled') {\n          msg = `✅ Fulfilled promise in ${promiceDelay} ms`;\n          resolve(msg);\n        } else {\n          msg = `❌ Rejected promise in ${promiceDelay} ms`;\n          reject(msg);\n        }\n      }, promiceDelay);\n    });\n    // Registering promise callbacks\n    promise.then(\n      value => {\n        console.log(value); // \"Success! Value passed to resolve function\"\n      },\n      error => {\n        console.log(error); // \"Error! Error passed to reject function\"\n      }\n    );\n    // reset form values\n    stateForm.reset();\n  } else {\n    window.alert('Please fill in all fields.');\n  }\n};\n\n//button.addEventListener('submit', handleClick);\nbutton.addEventListener('click', handleClick);\n"],"names":["button","delay","promiceDelay","stateInputs","stateForm","handleClick","event","promiceState","input","resolve","reject","msg","value","error"],"mappings":"wFAEA,MAAMA,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAQ,SAAS,cAAc,qBAAqB,EAC1D,IAAIC,EAAeD,EAAM,MAEzBA,EAAM,iBAAiB,SAAU,IAAM,CACrCC,EAAeD,EAAM,KAEvB,CAAC,EAKD,MAAME,EAAc,SAAS,iBAAiB,qBAAqB,EAC7DC,EAAY,SAAS,cAAc,OAAO,EAG1CC,EAAcC,GAAS,CAC3BA,EAAM,eAAc,EAEpB,IAAIC,EAAe,GACnBJ,EAAY,QAAQK,GAAS,CACvBA,EAAM,UACRD,EAAeC,EAAM,MAE3B,CAAG,EAEGD,GAAgBL,GAIF,IAAI,QAAQ,CAACO,EAASC,IAAW,CAE/C,IAAIC,EAAM,GACV,WAAW,IAAM,CACXJ,IAAiB,aACnBI,EAAM,0BAA0BT,CAAY,MAC5CO,EAAQE,CAAG,IAEXA,EAAM,yBAAyBT,CAAY,MAC3CQ,EAAOC,CAAG,EAEb,EAAET,CAAY,CACrB,CAAK,EAEO,KACNU,GAAS,CACP,QAAQ,IAAIA,CAAK,CAClB,EACDC,GAAS,CACP,QAAQ,IAAIA,CAAK,CAClB,CACP,EAEIT,EAAU,MAAK,GAEf,OAAO,MAAM,4BAA4B,CAE7C,EAGAJ,EAAO,iBAAiB,QAASK,CAAW"}